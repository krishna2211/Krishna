//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace storedConsole
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class febDemoEntities : DbContext
    {
        public febDemoEntities()
            : base("name=febDemoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<emp> emps { get; set; }
    
        public virtual int DeleteEmp(Nullable<int> empno)
        {
            var empnoParameter = empno.HasValue ?
                new ObjectParameter("empno", empno) :
                new ObjectParameter("empno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmp", empnoParameter);
        }
    
        public virtual int InsertEmp(Nullable<int> empno, string ename, string desig, Nullable<decimal> salary)
        {
            var empnoParameter = empno.HasValue ?
                new ObjectParameter("empno", empno) :
                new ObjectParameter("empno", typeof(int));
    
            var enameParameter = ename != null ?
                new ObjectParameter("ename", ename) :
                new ObjectParameter("ename", typeof(string));
    
            var desigParameter = desig != null ?
                new ObjectParameter("desig", desig) :
                new ObjectParameter("desig", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEmp", empnoParameter, enameParameter, desigParameter, salaryParameter);
        }
    
        public virtual int updateEmp(Nullable<int> empno, string ename, string desig, Nullable<decimal> salary)
        {
            var empnoParameter = empno.HasValue ?
                new ObjectParameter("empno", empno) :
                new ObjectParameter("empno", typeof(int));
    
            var enameParameter = ename != null ?
                new ObjectParameter("ename", ename) :
                new ObjectParameter("ename", typeof(string));
    
            var desigParameter = desig != null ?
                new ObjectParameter("desig", desig) :
                new ObjectParameter("desig", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateEmp", empnoParameter, enameParameter, desigParameter, salaryParameter);
        }
    }
}
